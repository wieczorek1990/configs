[alias]
  amend = commit --amend
  authors = !git log --all --format='%cN <%cE>' | sort -u
  a = add
  ba = branch -a
  bd = branch -d
  bdd = branch -D
  bm = branch -m
  bn = checkout -b
  br = branch -r
  bup = branch --set-upstream-to origin
  b = branch
  ca = commit -a -m
  chx = update-index --chmod=+x
  cln = clean -df
  clr = checkout -- .
  cl = clone
  co = checkout
  cp = cherry-pick
  cnc = reset @^
  cm = commit -m
  c = commit
  ds = diff stash@{0}
  dt = difftool
  d = diff
  lm = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)' --abbrev-commit --author='Łukasz Wieczorek' --date=relative
  ls = log --graph --oneline --decorate
  l = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  msg = log -n 1 --pretty=format:%s
  mt = mergetool
  m = merge
  orig = "f() { dir=~/Projects/orig/`date`; mkdir -p $dir; find . -name '*.orig' | parallel -X mv '{}' $dir; }; f"
  pf = push -u origin
  pm = push origin master
  pr = pull --rebase origin
  pu = pull origin
  pc = "!f(){ HEAD=`git rev-parse --abbrev-ref HEAD`; git pull origin $HEAD; }; f"
  pl = pull .
  p = push origin
  rc = rm -r --cached
  rst = reset HEAD --
  sta = stash apply --index
  std = stash drop
  stl = stash list
  stp = stash pop --index
  sts = stash save
  st = stash
  stua = !git stash show -p | git apply -R
  s = status
  undo = reset --soft HEAD~1
  up = "!f(){ HEAD=`git rev-parse --abbrev-ref HEAD`; git p; git co develop && git pu develop && git pu $HEAD; git p; }; f"
[core]
  autocrlf = input
[diff]
  tool = meld
[difftool]
  prompt = false
[include]
  path = ~/.gitemail
[merge]
  tool = mymeld
  conflictstyle = diff3
[mergetool]
  keepBackup = false
[mergetool "mymeld"]
  cmd = meld $LOCAL $BASE $REMOTE --output $MERGED
[push]
  default = current
[user]
	name = Łukasz Wieczorek
